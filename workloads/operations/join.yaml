# Represent a (hash-) join operation split into build and probe.

# The join is inspired by the PMem hash-index Dash (Lu et al., PVLDB 13(8), 2020).
# Dash has 256 Byte buckets and performs two stores for each insert.
# We represent this with an initial bucket lookup (with varying size), followed by two cache line sized writes.
# The writes are followed by a CLWB + SFENCE as in the original paper.
# We also vary the number of threads.
join_build:
  matrix:
    number_threads: [1, 8, 16, 32]
    # Represent bucket sizes 64, 256, 1024
    custom_operations:
      - "r64,w64_cache,w64_cache"
      - "r256,w64_cache,w64_cache"
      - "r1024,w64_cache,w64_cache"

  args:
    total_memory_range: 10G
    number_operations: 100000000
    exec_mode: custom

# Based on Dash's displacement bucket design, we read two consecutive buckets for each lookup.
# We double the sizes of the buckets used in the build benchmark to represent this.
join_probe:
  matrix:
    number_threads: [ 1, 8, 16, 32 ]
    # Represent bucket sizes 64, 256, 1024
    custom_operations:
      - "r128"
      - "r512"
      - "r2048"

  args:
    total_memory_range: 10G
    number_operations: 200000000
    exec_mode: custom
